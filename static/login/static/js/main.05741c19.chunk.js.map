{"version":3,"sources":["logo.svg","Form.jsx","App.js","serviceWorker.js","index.js","imgbeam.png"],"names":["module","exports","Form","useState","redirect","setRedirect","valid","setValid","username","setUsername","password","setPassword","useEffect","urlparams","URLSearchParams","window","location","search","has","get","document","getElementById","focus","console","log","length","id","class","style","action","method","width","Input","className","value","onChange","e","target","type","tabIndex","name","placeholder","disabled","opacity","borderRadius","background","href","color","styled","input","App","src","imgbeam","alt","height","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.05741c19.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useEffect, useState } from \"react\"\nimport styled from 'styled-components'\nimport { validate } from \"uuid\"\nexport default function Form() {\n  const [redirect, setRedirect] = useState('')\n  const [valid, setValid] = useState(false)\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  useEffect(()=>{\n    let urlparams = new URLSearchParams(window.location.search)\n\n    if(urlparams.has('redirect') && urlparams.get('redirect') !== '/'){\n      setRedirect('?redirect='+urlparams.get('redirect'))\n    }\n    document.getElementById('login-input').focus()\n  },[])\n  useEffect(()=>{\n    console.log(redirect)\n  },[redirect])\n  useEffect(()=>{\n    if(password.length > 6 && username.length > 0){\n      setValid(true)\n      return\n    }\n    setValid(false)\n  }, [password, username])\n  return (\n    <div\n      id=\"form-container\"\n      class=\"flex container mx-auto max-w-2xl flex-col justify-center align-center text-black\"\n      style={{\n        \n      }}\n    >\n      <form\n        action={`/login${redirect}`}\n        // onSubmit={e=>requestLogin(e)}\n        method=\"POST\"\n        class=\"flex flex-col max-w-2xl mx-auto\"\n      >\n        <div\n          id=\"login-form-panel\"\n          class=\" flex flex-col mt-4\"\n          style={{\n            // background: \"#eee\",\n            width: '300px'\n          }}\n        >\n          <Input\n            id=\"login-input\"\n            className=\" border-gray-300 outline-none focus:outline-none  px-4 py-1 mb-2\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            type=\"text\"\n            tabIndex={1}\n            name=\"username\"\n            placeholder=\"username or email\"\n          />\n          <Input\n            className=\" border-gray-300 outline-none focus:outline-none  px-4 py-1 mb-2\"\n            onChange={e => setPassword(e.target.value)}\n            value={password}\n            tabIndex={2}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n          />\n        </div>\n        <div id=\"login-control-sub-panel\" className=\"mt-4\">\n          <button\n            disabled={!valid}\n            className=\"px-4 w-full text-sm font-bold hover:opacity-50  mb-8 py-1 text-white\"\n            type=\"submit\"\n            tabIndex={3}\n            style={{\n              opacity: `${valid ? 1 : .2}`,\n              borderRadius: '3px',\n              background: '#3498db',\n            }}\n          >\n            Login\n          </button>\n          <div id=\"forgot-password\">\n            <a href=\"/password/forgot\" className=\"text-xs\" style={{\n              color: \"#3498db\"\n            }}>Forgot password?</a>\n          </div>\n        </div>\n      </form>\n    </div>\n  )\n}\nconst Input = styled.input`\n  border: 2px solid rgba(0,0,0,0);\n  font-size: 14px;\n  color: white;\n  background: rgba(255,255,255,.1);\n  border-radius: 3px;\n  :hover{\n    opacity: .8;\n  }\n  :focus{\n    border-color: #3498db;\n  }\n  ::active,:focus{\n    outline: none;\n  }\n`","import React from \"react\"\nimport logo from \"./logo.svg\"\nimport \"./App.css\"\nimport imgbeam from \"./imgbeam.png\"\nimport \"../src/css/main.css\"\nimport Form from \"./Form\"\nfunction App() {\n  return (\n    <div\n      className=\"App text-white flex flex-col h-screen justify-center\"\n      style={{ background: \"#232323\" }}\n    >\n      <div\n        id=\"login-content\"\n        className=\"max-w-3xl mx-auto py-8\"\n        style={{\n          width: \"330px\",\n          background: \"#373737\",\n          borderRadius: '3px'\n\n        }}\n      >\n        <div className=\"text-center flex items-center justify-center mb-4\">\n          <a href=\"//imgbeam.com\">\n            <img\n              src={imgbeam}\n              alt=\"\"\n              style={{\n                height: \"30px\",\n              }}\n            />\n          </a>\n        </div>\n        <div id=\"subtitle\" className=\"mb-4 text-xs\">\n          sign in\n        </div>\n        <Form></Form>\n      </div>\n\n      <div\n        id=\"login-content\"\n        className=\"max-w-3xl mx-auto py-3 mt-3\"\n        style={{\n          width: \"330px\",\n          background: \"#373737\",\n          borderRadius: '3px'\n\n        }}\n      >\n        <div\n          class=\"flex flex-col justify-center items-center\"\n          style={{\n            background: \"#373737\",\n            borderRadius: '3px'\n          }}\n        >\n          <div class=\"text-xs text-white\">\n            Don't have an account?\n          </div>\n          <a href=\"/signup\" class=\" font-bold mt-2 mb-2 text-xs\" style={{\n            color: \"#3498db\"\n          }}>\n            Register\n          </a>\n        </div>\n      </div>\n      <div className=\"absolute bottom-0 right-0 mb-2 mr-4\">\n        <ul className=\"flex flex-row\">\n          <li className=\"mx-1 px-1\">\n            <a href=\"/termsofuse\">terms of use</a>\n          </li>\n          <li className=\"mx-1 px-1\">\n            <a href=\"/privacypolicy\">privacy</a>\n          </li>\n          <li className=\"mx-1 px-1\">\n            <a href=\"/about\">about</a>\n          </li>\n          <li className=\"mx-1 px-1\">\n            <a href=\"/support\">support</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/imgbeam.4803f613.png\";"],"sourceRoot":""}